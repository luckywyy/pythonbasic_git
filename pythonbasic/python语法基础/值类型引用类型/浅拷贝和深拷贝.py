#
# 浅拷贝(copy)：拷贝父对象，不会拷贝对象的内部的子对象。
#
# 深拷贝(deepcopy)： copy 模块的 deepcopy 方法，完全拷贝了父对象及其子对象。




# 直接赋值 是引用
a = [1, 2, 3, [4, 5, 6]]
b = a
print(a, b)
a[0] = 'a'
print(a, b)
# out 两者都改变了

print("======================================")

c = [1, 2, 3, [4, 5, 6], [7, 8, 9]]
d = c.copy()
print(c, d)
c[3] = '10'
print(c, d) # 目前d没改变 因为[4, 5, 6]属于父对象 copy方法使得c d指向两个父对象引用
c[4][0] = 'b'
print(c, d) # d 也改变了 这是因为子对象引用只有一个

print("======================================")

import copy
e = [1, 2, 3, [4, 5, 6], [7, 8, 9]]
f = copy.deepcopy(e)
print(e, f)
e[3] = '10'
print(e, f) # f 不会改变 copy方法深度拷贝 即使是子对象 也会指向不同的引用
e[4][0] = 'b'
print(e, f) # f 不会改变 copy方法深度拷贝 即使是子对象 也会指向不同的引用